schema {
    int suID,
    string suEmail = {""},
    string suFirstName = {""},
    string suLastName = {""},
    bool suActive = {true},
    bool suLocked,
    DateTime? suLastLogin
}

partial WithPassword {
    string suPasswordHash
}

partial WithPermissions {
    List<Permission> user_perms = {new()},
    List<string> user_roles = {new() { "Guest" }}
}

{
    public class ResetToken
    {
        public Guid suPasswordReset { get; set; }
    }
}

repo {
    dbo.SiteUser_GetByID(int suID)
        => SiteUser,

    dbo.SiteUser_Set(
        int suID,
        string suEmail,
        string suFirstName,
        string suLastName,
        bool suActive,
        bool suLocked)
        => SiteUser,

    dbo.SiteUser_Delete(int suID),

    dbo.SiteUser_GetWithPassword(string suEmail)
        => SiteUser.WithPassword,

    dbo.SiteUser_GetWithPermissions(int suID)
        => json SiteUser.WithPermissions,

    dbo.SiteUser_ResetPassword(string suEmail)
        => SiteUser.ResetToken
}

service {
    AttemptLogin(string suEmail, string password)
        => SiteUser.WithPermissions,

    ResetPassword(string suEmail)
        => SiteUser.ResetToken
}