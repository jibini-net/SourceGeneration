state {
}

interface {
}

div(| class = {"d-flex"} |
	parent(
		{CascadingState}
		{cascade}
		if(
			{cascade.State["loggedIn"].ParseIfNot<SiteUser>().suID == 0}

			<>
				span(| class = {"my-auto"} |
					{"Guest"}
				)
				button(
					|
					class = {"btn btn-success my-auto ms-2"},
					onclick = {"onLogIn(this);"}
					|
					{"Log in"}
				)
			</>

			<>
				span(
					|
					class = {"iconify my-auto"},
					{data-icon} = {"material-symbols:person"}
					|
				)
				strong(| class = {"my-auto"} |
					{cascade.State["loggedIn"].ParseIfNot<SiteUser>().suFirstName}
				)
				button(
					|
					class = {"btn btn-outline-secondary my-auto ms-2"},
					onclick = {"onLogOut(this);"}
					|
					{"Log out"}
				)
			</>
		)
	)
)

script(
	unsafe(<">
	
		async function onLogIn(el) {
			var cascade = el.closest("._CascadingState");
			await dispatch(cascade, 'SetLoggedIn', { loggedIn: { suID: 1, suFirstName: "John" }});
		}

		async function onLogOut(el) {
			var cascade = el.closest("._CascadingState");
			await dispatch(cascade, 'SetLoggedIn', { loggedIn: {}});
		}

	</">)
)
