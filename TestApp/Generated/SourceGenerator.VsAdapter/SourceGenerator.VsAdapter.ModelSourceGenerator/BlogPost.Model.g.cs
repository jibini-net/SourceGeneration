/* DO NOT EDIT THIS FILE */
#nullable disable
namespace Generated;
public class BlogPost
{
    public int bpID { get; set; }
    public int bpSiteUserID { get; set; }
    public DateTime bpPostedDate { get; set; }
    public string bpTitle { get; set; }
    public string bpContent { get; set; }
    public bool bpActive { get; set; }
        = true;
    public partial class WithComments : BlogPost
    {
        public List<string> user_comments { get; set; }
            = new();
    }
    public class Repository
    {
        //TODO Code to inject database service interface
        public BlogPost BlogPost_GetByID(int bpID)
        {
            //TODO Code to read results from proc
            return default;
            //return db.Execute<BlogPost>("BlogPost_GetByID", new { 
            //    bpID
            //});
        }
        public List<BlogPost> BlogPost_GetByUserID(int suID)
        {
            //TODO Code to read results from proc
            return default;
            //return db.Execute<List<BlogPost>>("BlogPost_GetByUserID", new { 
            //    suID
            //});
        }
        public BlogPost.WithComments BlogPost_GetWithComments(int bpID)
        {
            //TODO Code to read results from proc as json
            return default;
            //return db.ExecuteForJson<BlogPost.WithComments>("BlogPost_GetWithComments", new { 
            //    bpID
            //});
        }
        public BlogPost BlogPost_Create(int bpSiteUserID,string bpContent)
        {
            //TODO Code to read results from proc
            return default;
            //return db.Execute<BlogPost>("BlogPost_Create", new { 
            //    bpSiteUserID,
            //    bpContent
            //});
        }
        public void BlogPost_Delete(int bpID)
        {
            //TODO Code to execute void-result proc
            //db.Execute("BlogPost_Delete", new { 
            //    bpID
            //});
        }
        public List<BlogPost> BlogPost_List()
        {
            //TODO Code to read results from proc
            return default;
            //return db.Execute<List<BlogPost>>("BlogPost_List", new { 

            //});
        }
    }
    public interface IService
    {
        BlogPost MakePost(string bpContent);
        BlogPost.WithComments Get(int bpID);
        List<BlogPost> GetByUser(int suID);
    }
    public interface IBackendService : IService
    {
        // Implement and inject this interface as a separate service
    }
    public class DbService : IService
    {
        //TODO Inject database wrapper service
        private readonly IBackendService impl;
        public DbService(IBackendService impl)
        {
            this.impl = impl;
        }
        public BlogPost MakePost(string bpContent)
        {
            //TODO Code to execute via DB wrapper
            return /*wrapper.Execute<BlogPost>(() => */impl.MakePost(
                  bpContent
                  )/*)*/;
        }
        public BlogPost.WithComments Get(int bpID)
        {
            //TODO Code to execute via DB wrapper
            return /*wrapper.Execute<BlogPost.WithComments>(() => */impl.Get(
                  bpID
                  )/*)*/;
        }
        public List<BlogPost> GetByUser(int suID)
        {
            //TODO Code to execute via DB wrapper
            return /*wrapper.Execute<List<BlogPost>>(() => */impl.GetByUser(
                  suID
                  )/*)*/;
        }
    }
    public class ApiService : IService
    {
        //TODO Inject HTTP client service
        public ApiService()
        {
        }
        public BlogPost MakePost(string bpContent)
        {
            //TODO Code to execute via API client
            return default;
            //return api.Execute<BlogPost>("BlogPost/MakePost", new {
            //    bpContent
            //});
        }
        public BlogPost.WithComments Get(int bpID)
        {
            //TODO Code to execute via API client
            return default;
            //return api.Execute<BlogPost.WithComments>("BlogPost/Get", new {
            //    bpID
            //});
        }
        public List<BlogPost> GetByUser(int suID)
        {
            //TODO Code to execute via API client
            return default;
            //return api.Execute<List<BlogPost>>("BlogPost/GetByUser", new {
            //    suID
            //});
        }
    }
}
